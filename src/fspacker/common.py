import dataclasses
import pathlib
import typing

__all__ = [
    "BuildTarget",
    "BuildConfig",
]

from functools import cached_property


@dataclasses.dataclass
class BuildTarget:
    src: pathlib.Path
    deps: typing.List[pathlib.Path]
    ast: typing.Set[str]

    def __repr__(self):
        return f"[src={self.src.name}, ast={self.ast}, deps={self.deps}]"

    @cached_property
    def dist_dir(self) -> pathlib.Path:
        return self.src.parent / "dist"

    @cached_property
    def runtime_dir(self) -> pathlib.Path:
        return self.dist_dir / "runtime"

    @cached_property
    def packages_dir(self) -> pathlib.Path:
        return self.dist_dir / "site-packages"


@dataclasses.dataclass
class BuildConfig:
    """Build config generated by parser"""

    targets: typing.Dict[str, BuildTarget]
